---
- name: Install tomcat 10
  hosts: all
  become: yes
  tasks:
    - name: java installation
      ansible.builtin.package:
        name: "{{ java_default_version }}"
        state: present
    - name: creating the tomcat group
      ansible.builtin.group:
        name: "{{ group_name }}"
        state: present
    - name: creating user 
      ansible.builtin.user:
        name: "{{ user_name }}"
        create_home: true
        group: "{{ group_name }}"
        home: "{{ home_dir }}"
        shell: "{{ shell }}"
        state: present
    - name: get tomcat stats
      ansible.builtin.stat:
        path: "{{ home_dir }}/latest/bin/startup.sh"
      register: tomcat_folder
    - name: downloading tomcat & untaring
      ansible.builtin.unarchive:
        src: "https://www-eu.apache.org/dist/tomcat/tomcat-{{ tomcat_major_version }}/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz"
        dest: "{{ home_dir }}"
        remote_src: yes
      when: not tomcat_folder.stat.exists
    - name: creating a symbolic link 
      ansible.builtin.file:
        src: "{{ home_dir }}/apache-tomcat-{{ tomcat_version }}"
        dest: "{{ home_dir }}/latest"
        state: link
    - name: change permissions
      ansible.builtin.file:
        dest: "{{ home_dir }}"
        recurse: true
        owner: "{{ owner_name }}"
        group: "{{ group_name }}"
        state: directory
      when: not tomcat_folder.stat.exists
    - name: add execute permissions to shell files
      ansible.builtin.command: sudo sh -c 'chmod +x /opt/tomcat/latest/bin/*.sh'
      when: not tomcat_folder.stat.exists
    - name: Copy service file for Ubuntu
      ansible.builtin.copy:
        src: ubuntu.tomcat.service
        dest: /etc/systemd/system/tomcat.service
        owner: "{{ owner_name }}"
        group: "{{ group_name }}"
      when: ansible_facts['distribution'] == 'Ubuntu'
    - name: Copy service file for CentOS
      ansible.builtin.copy:
        src: centos.tomcat.service
        dest: /etc/systemd/system/tomcat.service
        owner: "{{ owner_name }}"
        group: "{{ group_name }}"
      when: ansible_facts['distribution'] == 'CentOS' 
    - name: reload daemon and start tomcat
      ansible.builtin.systemd:
        name: "{{ tomcat_service_name }}"
        daemon_reload: yes
        enabled: yes
        state: started
    - name: coping tomcat users file
      ansible.builtin.copy:
        src: tomcat-users.xml
        dest: "{{ home_dir }}/latest/conf/tomcat-users.xml"
        owner: "{{ owner_name }}"
        group: "{{ group_name }}"
    - name: coping tomcat manager context file
      ansible.builtin.copy:
        src: manager-context.xml
        dest: "{{ home_dir }}/latest/webapps/manager/META-INF/context.xml"
        owner: "{{ owner_name }}"
        group: "{{ group_name }}"
    - name: coping tomcat host-manager context file
      ansible.builtin.copy:
        src: host-manager-context.xml
        dest: "{{ home_dir }}/latest/webapps/host-manager/META-INF/context.xml"
        owner: "{{ owner_name }}"
        group: "{{ group_name }}"
    - name: restart tomcat
      ansible.builtin.systemd:
        name: "{{ tomcat_service_name }}"
        state: restarted 